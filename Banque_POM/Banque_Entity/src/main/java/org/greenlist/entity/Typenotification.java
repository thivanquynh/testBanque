package org.greenlist.entity;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Typenotification generated by hbm2java
 */
@Entity
@Table(name = "typenotification", catalog = "projet3")
public class Typenotification implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	private int id;
	@Column(name = "LIBELLE", nullable = false, length = 50)
	private String libelle;
	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "typenotifications")
	private List<Preference> preferences = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typenotification")
	private List<Notification> notifications = new ArrayList<>();

	public Typenotification() {
	}

	public Typenotification(int id, String libelle) {
		this.id = id;
		this.libelle = libelle;
	}

	public Typenotification(int id, String libelle, List<Preference> preferences, List<Notification> notifications) {
		this.id = id;
		this.libelle = libelle;
		this.preferences = preferences;
		this.notifications = notifications;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getLibelle() {
		return this.libelle;
	}

	public void setLibelle(String libelle) {
		this.libelle = libelle;
	}

	public List<Preference> getPreferences() {
		return this.preferences;
	}

	public void setPreferences(List<Preference> preferences) {
		this.preferences = preferences;
	}

	public List<Notification> getNotifications() {
		return this.notifications;
	}

	public void setNotifications(List<Notification> notifications) {
		this.notifications = notifications;
	}

}
