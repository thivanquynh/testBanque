package org.greenlist.entity;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Echange generated by hbm2java
 */
@Entity
@Table(name = "echange", catalog = "projet3")
public class Echange implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	private int id;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDCONCLUSION")
	private Conclusionechange conclusionechange;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDECHANGEPARENT")
	private Echange echange;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDMOTIFREFUS")
	private MotifRefus motifRefus;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUSERA", nullable = false)
	private Utilisateur utilisateurByIdusera;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUSERB", nullable = false)
	private Utilisateur utilisateurByIduserb;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_CREATION", nullable = false, length = 19)
	private Date dateCreation;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_DEBUT_NEGOCIATION", length = 19)
	private Date dateDebutNegociation;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_VALIDATION_NEGOCIATION", length = 19)
	private Date dateValidationNegociation;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DATE_ECHANGE", length = 19)
	private Date dateEchange;
	@Column(name = "HASVALIDATEDUSERA", nullable = false)
	private boolean hasvalidatedusera;
	@Column(name = "HASVALIDATEDUSERB", nullable = false)
	private boolean hasvalidateduserb;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_CONCLUSION", nullable = false, length = 10)
	private Date dateConclusion;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "echange")
	private List<Rdv> rdvs = new ArrayList<>();
	@ManyToMany(fetch = FetchType.LAZY, cascade=CascadeType.PERSIST)
	@JoinTable(	name="ECHANGE_OBJET",
				joinColumns=@JoinColumn(name="ECH_ID"),
				inverseJoinColumns=@JoinColumn(name="OBJ_ID"))
	private List<Objet> objets = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "echange")
	private List<Echange> echanges = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "echange")
	private List<Note> notes = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "echange")
	private List<Message> messages = new ArrayList<>();

	public Echange() {
	}

	public Echange(int id, Utilisateur utilisateurByIdusera, Utilisateur utilisateurByIduserb, Date dateCreation,
			boolean hasvalidatedusera, boolean hasvalidateduserb, Date dateConclusion) {
		this.id = id;
		this.utilisateurByIdusera = utilisateurByIdusera;
		this.utilisateurByIduserb = utilisateurByIduserb;
		this.dateCreation = dateCreation;
		this.hasvalidatedusera = hasvalidatedusera;
		this.hasvalidateduserb = hasvalidateduserb;
		this.dateConclusion = dateConclusion;
	}

	public Echange(int id, Conclusionechange conclusionechange, Echange echange, MotifRefus motifRefus,
			Utilisateur utilisateurByIdusera, Utilisateur utilisateurByIduserb, Date dateCreation,
			Date dateDebutNegociation, Date dateValidationNegociation, Date dateEchange, boolean hasvalidatedusera,
			boolean hasvalidateduserb, Date dateConclusion, List<Rdv> rdvs, List<Objet> objets, List<Echange> echanges,
			List<Note> notes, List<Message> messages) {
		this.id = id;
		this.conclusionechange = conclusionechange;
		this.echange = echange;
		this.motifRefus = motifRefus;
		this.utilisateurByIdusera = utilisateurByIdusera;
		this.utilisateurByIduserb = utilisateurByIduserb;
		this.dateCreation = dateCreation;
		this.dateDebutNegociation = dateDebutNegociation;
		this.dateValidationNegociation = dateValidationNegociation;
		this.dateEchange = dateEchange;
		this.hasvalidatedusera = hasvalidatedusera;
		this.hasvalidateduserb = hasvalidateduserb;
		this.dateConclusion = dateConclusion;
		this.rdvs = rdvs;
		this.objets = objets;
		this.echanges = echanges;
		this.notes = notes;
		this.messages = messages;
	}

	
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Conclusionechange getConclusionechange() {
		return this.conclusionechange;
	}

	public void setConclusionechange(Conclusionechange conclusionechange) {
		this.conclusionechange = conclusionechange;
	}

	public Echange getEchange() {
		return this.echange;
	}

	public void setEchange(Echange echange) {
		this.echange = echange;
	}

	public MotifRefus getMotifRefus() {
		return this.motifRefus;
	}

	public void setMotifRefus(MotifRefus motifRefus) {
		this.motifRefus = motifRefus;
	}

	public Utilisateur getUtilisateurByIdusera() {
		return this.utilisateurByIdusera;
	}

	public void setUtilisateurByIdusera(Utilisateur utilisateurByIdusera) {
		this.utilisateurByIdusera = utilisateurByIdusera;
	}

	public Utilisateur getUtilisateurByIduserb() {
		return this.utilisateurByIduserb;
	}

	public void setUtilisateurByIduserb(Utilisateur utilisateurByIduserb) {
		this.utilisateurByIduserb = utilisateurByIduserb;
	}

	public Date getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(Date dateCreation) {
		this.dateCreation = dateCreation;
	}

	public Date getDateDebutNegociation() {
		return this.dateDebutNegociation;
	}

	public void setDateDebutNegociation(Date dateDebutNegociation) {
		this.dateDebutNegociation = dateDebutNegociation;
	}

	public Date getDateValidationNegociation() {
		return this.dateValidationNegociation;
	}

	public void setDateValidationNegociation(Date dateValidationNegociation) {
		this.dateValidationNegociation = dateValidationNegociation;
	}

	public Date getDateEchange() {
		return this.dateEchange;
	}

	public void setDateEchange(Date dateEchange) {
		this.dateEchange = dateEchange;
	}

	public boolean isHasvalidatedusera() {
		return this.hasvalidatedusera;
	}

	public void setHasvalidatedusera(boolean hasvalidatedusera) {
		this.hasvalidatedusera = hasvalidatedusera;
	}

	public boolean isHasvalidateduserb() {
		return this.hasvalidateduserb;
	}

	public void setHasvalidateduserb(boolean hasvalidateduserb) {
		this.hasvalidateduserb = hasvalidateduserb;
	}

	public Date getDateConclusion() {
		return this.dateConclusion;
	}

	public void setDateConclusion(Date dateConclusion) {
		this.dateConclusion = dateConclusion;
	}

	public List<Rdv> getRdvs() {
		return this.rdvs;
	}

	public void setRdvs(List<Rdv> rdvs) {
		this.rdvs = rdvs;
	}

	public List<Objet> getObjets() {
		return this.objets;
	}

	public void setObjets(List<Objet> objets) {
		this.objets = objets;
	}

	public List<Echange> getEchanges() {
		return this.echanges;
	}

	public void setEchanges(List<Echange> echanges) {
		this.echanges = echanges;
	}

	public List<Note> getNotes() {
		return this.notes;
	}

	public void setNotes(List<Note> notes) {
		this.notes = notes;
	}

	public List<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(List<Message> messages) {
		this.messages = messages;
	}

}
