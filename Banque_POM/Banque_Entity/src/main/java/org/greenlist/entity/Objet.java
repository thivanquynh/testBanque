package org.greenlist.entity;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Objet generated by hbm2java
 */
@Entity
@Table(name = "objet", catalog = "projet3")
public class Objet implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	private int id;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPRODUIT", nullable = false)
	private Produit produit;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDTRANCHEAGE", nullable = false)
	private TrancheAge trancheAge;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDUTILISATEUR", nullable = false)
	private Utilisateur utilisateur;
	@Column(name = "LIBELLE", nullable = false, length = 50)
	private String libelle;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_DEPOT", nullable = false, length = 10)
	private Date dateDepot;
	@Column(name = "VALEUR", nullable = false)
	private int valeur;
	@Column(name = "DESCRIPTION", length = 10000)
	private String description;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_PUBLICATION", length = 10)
	private Date datePublication;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_DEPUBLICATION", length = 10)
	private Date dateDepublication;
	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "objets")
	private List<Echange> echanges = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objet")
	private List<Ticket> tickets = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objet")
	private List<Messagepublic> messagepublics = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objet")
	private List<Photo> photos = new ArrayList<>();
	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "objets")
	private List<Panier> paniers = new ArrayList<>();
	
	@Transient
	private double pertinence;
	@Transient
	private double distance;

	public Objet() {
	}

	public Objet(int id, Produit produit, TrancheAge trancheAge, Utilisateur utilisateur, String libelle,
			Date dateDepot, int valeur) {
		this.id = id;
		this.produit = produit;
		this.trancheAge = trancheAge;
		this.utilisateur = utilisateur;
		this.libelle = libelle;
		this.dateDepot = dateDepot;
		this.valeur = valeur;
	}

	public Objet(int id, Produit produit, TrancheAge trancheAge, Utilisateur utilisateur, String libelle,
			Date dateDepot, int valeur, String description, Date datePublication, Date dateDepublication,
			List<Echange> echanges, List<Ticket> tickets, List<Messagepublic> messagepublics, List<Photo> photos,
			List<Panier> paniers) {
		this.id = id;
		this.produit = produit;
		this.trancheAge = trancheAge;
		this.utilisateur = utilisateur;
		this.libelle = libelle;
		this.dateDepot = dateDepot;
		this.valeur = valeur;
		this.description = description;
		this.datePublication = datePublication;
		this.dateDepublication = dateDepublication;
		this.echanges = echanges;
		this.tickets = tickets;
		this.messagepublics = messagepublics;
		this.photos = photos;
		this.paniers = paniers;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Produit getProduit() {
		return this.produit;
	}

	public void setProduit(Produit produit) {
		this.produit = produit;
	}

	public TrancheAge getTrancheAge() {
		return this.trancheAge;
	}

	public void setTrancheAge(TrancheAge trancheAge) {
		this.trancheAge = trancheAge;
	}

	public Utilisateur getUtilisateur() {
		return this.utilisateur;
	}

	public void setUtilisateur(Utilisateur utilisateur) {
		this.utilisateur = utilisateur;
	}

	public String getLibelle() {
		return this.libelle;
	}

	public void setLibelle(String libelle) {
		this.libelle = libelle;
	}

	public Date getDateDepot() {
		return this.dateDepot;
	}

	public void setDateDepot(Date dateDepot) {
		this.dateDepot = dateDepot;
	}

	public int getValeur() {
		return this.valeur;
	}

	public void setValeur(int valeur) {
		this.valeur = valeur;
	}

	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Date getDatePublication() {
		return this.datePublication;
	}

	public void setDatePublication(Date datePublication) {
		this.datePublication = datePublication;
	}

	public Date getDateDepublication() {
		return this.dateDepublication;
	}

	public void setDateDepublication(Date dateDepublication) {
		this.dateDepublication = dateDepublication;
	}

	public List<Echange> getEchanges() {
		return this.echanges;
	}

	public void setEchanges(List<Echange> echanges) {
		this.echanges = echanges;
	}

	public List<Ticket> getTickets() {
		return this.tickets;
	}

	public void setTickets(List<Ticket> tickets) {
		this.tickets = tickets;
	}

	public List<Messagepublic> getMessagepublics() {
		return this.messagepublics;
	}

	public void setMessagepublics(List<Messagepublic> messagepublics) {
		this.messagepublics = messagepublics;
	}

	public List<Photo> getPhotos() {
		return this.photos;
	}

	public void setPhotos(List<Photo> photos) {
		this.photos = photos;
	}

	public List<Panier> getPaniers() {
		return this.paniers;
	}

	public void setPaniers(List<Panier> paniers) {
		this.paniers = paniers;
	}

	public double getPertinence() {
		return pertinence;
	}

	public void setPertinence(double pertinence) {
		this.pertinence = pertinence;
	}

	public double getDistance() {
		return distance;
	}

	public void setDistance(double distance) {
		this.distance = distance;
	}
	
	

}
