package org.greenlist.entity;
// Generated 28 avr. 2017 10:03:43 by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Utilisateur generated by hbm2java
 */
@Entity
@Table(name = "utilisateur", catalog = "projet3")
public class Utilisateur implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	private int id;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDXP", nullable = false)
	private Experience experience;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDMOTIF")
	private MotifRadiation motifRadiation;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPANIER", nullable = false)
	private Panier panier;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDPREFERENCE", nullable = false)
	private Preference preference;
	@Column(name = "PSEUDO", nullable = false, length = 50)
	private String pseudo;
	@Column(name = "NOM", nullable = false, length = 50)
	private String nom;
	@Column(name = "PRENOM", nullable = false, length = 50)
	private String prenom;
	@Column(name = "EMAIL", nullable = false, length = 50)
	private String email;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_NAISSANCE", nullable = false, length = 10)
	private Date dateNaissance;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_INSCRIPTION", nullable = false, length = 10)
	private Date dateInscription;
	@Column(name = "PHOTO", length = 200)
	private String photo;
	@Column(name = "SOLDE", nullable = false)
	private int solde;
	@Temporal(TemporalType.DATE)
	@Column(name = "DEBUT_SUSPENSION", length = 10)
	private Date debutSuspension;
	@Temporal(TemporalType.DATE)
	@Column(name = "FIN_SUSPENSION", length = 10)
	private Date finSuspension;
	@Column(name = "PASSWORD", nullable = false, length = 50)
	private String password;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_DESINSCRIPTION", length = 10)
	private Date dateDesinscription;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_RADIATION", length = 10)
	private Date dateRadiation;
	@Temporal(TemporalType.DATE)
	@Column(name = "DATE_DERNIERE_CONNEXION", length = 10)
	private Date dateDerniereConnexion;
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurByIdutilisateurremonte")
	private List<Ticket> ticketsForIdutilisateurremonte = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Preference> preferences = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Liste> listes = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Adresse> adresses = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Message> messages = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurByIdusera")
	private List<Echange> echangesForIdusera = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurByIduserb")
	private List<Echange> echangesForIduserb = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Objet> objets = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurByIdutilisateursignale")
	private List<Ticket> ticketsForIdutilisateursignale = new ArrayList<>();
//	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurs")
//	private List<Coupon> coupons = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurByIdutilisateurnote")
	private List<Note> notesForIdutilisateurnote = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Email> emails = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Notification> notifications = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateurByIdutilisateurestnote")
	private List<Note> notesForIdutilisateurestnote = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Messagepublic> messagepublics = new ArrayList<>();
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "utilisateur")
	private List<Panier> paniers = new ArrayList<>();

	public Utilisateur() {
	}

	public Utilisateur(int id, Experience experience, Panier panier, Preference preference, String pseudo, String nom,
			String prenom, String email, Date dateNaissance, Date dateInscription, int solde, String password) {
		this.id = id;
		this.experience = experience;
		this.panier = panier;
		this.preference = preference;
		this.pseudo = pseudo;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.dateNaissance = dateNaissance;
		this.dateInscription = dateInscription;
		this.solde = solde;
		this.password = password;
	}

	public Utilisateur(int id, Experience experience, MotifRadiation motifRadiation, Panier panier,
			Preference preference, String pseudo, String nom, String prenom, String email, Date dateNaissance,
			Date dateInscription, String photo, int solde, Date debutSuspension, Date finSuspension, String password,
			Date dateDesinscription, Date dateRadiation, Date dateDerniereConnexion,
			List<Ticket> ticketsForIdutilisateurremonte, List<Preference> preferences, List<Liste> listes,
			List<Adresse> adresses, List<Message> messages, List<Echange> echangesForIdusera,
			List<Echange> echangesForIduserb, List<Objet> objets, List<Ticket> ticketsForIdutilisateursignale,
//			List<Coupon> coupons, 
			List<Note> notesForIdutilisateurnote, List<Email> emails,
			List<Notification> notifications, List<Note> notesForIdutilisateurestnote,
			List<Messagepublic> messagepublics, List<Panier> paniers) {
		this.id = id;
		this.experience = experience;
		this.motifRadiation = motifRadiation;
		this.panier = panier;
		this.preference = preference;
		this.pseudo = pseudo;
		this.nom = nom;
		this.prenom = prenom;
		this.email = email;
		this.dateNaissance = dateNaissance;
		this.dateInscription = dateInscription;
		this.photo = photo;
		this.solde = solde;
		this.debutSuspension = debutSuspension;
		this.finSuspension = finSuspension;
		this.password = password;
		this.dateDesinscription = dateDesinscription;
		this.dateRadiation = dateRadiation;
		this.dateDerniereConnexion = dateDerniereConnexion;
		this.ticketsForIdutilisateurremonte = ticketsForIdutilisateurremonte;
		this.preferences = preferences;
		this.listes = listes;
		this.adresses = adresses;
		this.messages = messages;
		this.echangesForIdusera = echangesForIdusera;
		this.echangesForIduserb = echangesForIduserb;
		this.objets = objets;
		this.ticketsForIdutilisateursignale = ticketsForIdutilisateursignale;
//		this.coupons = coupons;
		this.notesForIdutilisateurnote = notesForIdutilisateurnote;
		this.emails = emails;
		this.notifications = notifications;
		this.notesForIdutilisateurestnote = notesForIdutilisateurestnote;
		this.messagepublics = messagepublics;
		this.paniers = paniers;
	}

	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public Experience getExperience() {
		return this.experience;
	}

	public void setExperience(Experience experience) {
		this.experience = experience;
	}

	public MotifRadiation getMotifRadiation() {
		return this.motifRadiation;
	}

	public void setMotifRadiation(MotifRadiation motifRadiation) {
		this.motifRadiation = motifRadiation;
	}

	public Panier getPanier() {
		return this.panier;
	}

	public void setPanier(Panier panier) {
		this.panier = panier;
	}

	public Preference getPreference() {
		return this.preference;
	}

	public void setPreference(Preference preference) {
		this.preference = preference;
	}

	public String getPseudo() {
		return this.pseudo;
	}

	public void setPseudo(String pseudo) {
		this.pseudo = pseudo;
	}

	public String getNom() {
		return this.nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	public String getPrenom() {
		return this.prenom;
	}

	public void setPrenom(String prenom) {
		this.prenom = prenom;
	}

	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public Date getDateNaissance() {
		return this.dateNaissance;
	}

	public void setDateNaissance(Date dateNaissance) {
		this.dateNaissance = dateNaissance;
	}

	public Date getDateInscription() {
		return this.dateInscription;
	}

	public void setDateInscription(Date dateInscription) {
		this.dateInscription = dateInscription;
	}

	public String getPhoto() {
		return this.photo;
	}

	public void setPhoto(String photo) {
		this.photo = photo;
	}

	public int getSolde() {
		return this.solde;
	}

	public void setSolde(int solde) {
		this.solde = solde;
	}

	public Date getDebutSuspension() {
		return this.debutSuspension;
	}

	public void setDebutSuspension(Date debutSuspension) {
		this.debutSuspension = debutSuspension;
	}

	public Date getFinSuspension() {
		return this.finSuspension;
	}

	public void setFinSuspension(Date finSuspension) {
		this.finSuspension = finSuspension;
	}

	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public Date getDateDesinscription() {
		return this.dateDesinscription;
	}

	public void setDateDesinscription(Date dateDesinscription) {
		this.dateDesinscription = dateDesinscription;
	}

	public Date getDateRadiation() {
		return this.dateRadiation;
	}

	public void setDateRadiation(Date dateRadiation) {
		this.dateRadiation = dateRadiation;
	}

	public Date getDateDerniereConnexion() {
		return this.dateDerniereConnexion;
	}

	public void setDateDerniereConnexion(Date dateDerniereConnexion) {
		this.dateDerniereConnexion = dateDerniereConnexion;
	}

	public List<Ticket> getTicketsForIdutilisateurremonte() {
		return this.ticketsForIdutilisateurremonte;
	}

	public void setTicketsForIdutilisateurremonte(List<Ticket> ticketsForIdutilisateurremonte) {
		this.ticketsForIdutilisateurremonte = ticketsForIdutilisateurremonte;
	}

	public List<Preference> getPreferences() {
		return this.preferences;
	}

	public void setPreferences(List<Preference> preferences) {
		this.preferences = preferences;
	}

	public List<Liste> getListes() {
		return this.listes;
	}

	public void setListes(List<Liste> listes) {
		this.listes = listes;
	}

	public List<Adresse> getAdresses() {
		return this.adresses;
	}

	public void setAdresses(List<Adresse> adresses) {
		this.adresses = adresses;
	}

	public List<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(List<Message> messages) {
		this.messages = messages;
	}

	public List<Echange> getEchangesForIdusera() {
		return this.echangesForIdusera;
	}

	public void setEchangesForIdusera(List<Echange> echangesForIdusera) {
		this.echangesForIdusera = echangesForIdusera;
	}

	public List<Echange> getEchangesForIduserb() {
		return this.echangesForIduserb;
	}

	public void setEchangesForIduserb(List<Echange> echangesForIduserb) {
		this.echangesForIduserb = echangesForIduserb;
	}

	public List<Objet> getObjets() {
		return this.objets;
	}

	public void setObjets(List<Objet> objets) {
		this.objets = objets;
	}

	public List<Ticket> getTicketsForIdutilisateursignale() {
		return this.ticketsForIdutilisateursignale;
	}

	public void setTicketsForIdutilisateursignale(List<Ticket> ticketsForIdutilisateursignale) {
		this.ticketsForIdutilisateursignale = ticketsForIdutilisateursignale;
	}

//	public List<Coupon> getCoupons() {
//		return this.coupons;
//	}
//
//	public void setCoupons(List<Coupon> coupons) {
//		this.coupons = coupons;
//	}

	public List<Note> getNotesForIdutilisateurnote() {
		return this.notesForIdutilisateurnote;
	}

	public void setNotesForIdutilisateurnote(List<Note> notesForIdutilisateurnote) {
		this.notesForIdutilisateurnote = notesForIdutilisateurnote;
	}

	public List<Email> getEmails() {
		return this.emails;
	}

	public void setEmails(List<Email> emails) {
		this.emails = emails;
	}

	public List<Notification> getNotifications() {
		return this.notifications;
	}

	public void setNotifications(List<Notification> notifications) {
		this.notifications = notifications;
	}

	public List<Note> getNotesForIdutilisateurestnote() {
		return this.notesForIdutilisateurestnote;
	}

	public void setNotesForIdutilisateurestnote(List<Note> notesForIdutilisateurestnote) {
		this.notesForIdutilisateurestnote = notesForIdutilisateurestnote;
	}

	public List<Messagepublic> getMessagepublics() {
		return this.messagepublics;
	}

	public void setMessagepublics(List<Messagepublic> messagepublics) {
		this.messagepublics = messagepublics;
	}

	public List<Panier> getPaniers() {
		return this.paniers;
	}

	public void setPaniers(List<Panier> paniers) {
		this.paniers = paniers;
	}

}
